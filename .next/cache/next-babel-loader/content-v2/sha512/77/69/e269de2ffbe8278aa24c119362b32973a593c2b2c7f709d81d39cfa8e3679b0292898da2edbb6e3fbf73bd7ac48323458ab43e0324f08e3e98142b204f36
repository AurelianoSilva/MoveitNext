{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projetos Jaqueline\\\\Rocketseat\\\\NLW32020\\\\movefocus-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const {\n    0: level,\n    1: setLevel\n  } = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const {\n    0: isLevelUpModalOpen,\n    1: setIsLevelUpModalOpen\n  } = useState(false);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ðŸŽ‰', {\n        body: `Valendo ${challenge.amount}xp!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience = experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    3;\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      experienceToNextLevel,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      completeChallenge\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Projetos Jaqueline/Rocketseat/NLW32020/movefocus-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","Cookies","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import {createContext, useState, ReactNode, useEffect} from 'react';\r\nimport challenges from '../../challenges.json';\r\nimport Cookies from 'js-cookie';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    experienceToNextLevel: number;\r\n    challengesCompleted: number;\r\n    activeChallenge: Challenge;\r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completeChallenge: () => void;\r\n\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n}\r\n\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children, ...rest } : ChallengesProviderProps) {\r\n\r\n    const [level, setLevel] = useState( rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null);\r\n    const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false);\r\n\r\n    const experienceToNextLevel = Math.pow( (level + 1) * 4, 2);\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challengesCompleted', String(challengesCompleted));\r\n    },[level, currentExperience, challengesCompleted]);\r\n\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n        setIsLevelUpModalOpen(true);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge);\r\n\r\n        new Audio('/notification.mp3').play();\r\n\r\n        if(Notification.permission === 'granted') {\r\n            new Notification('Novo desafio ðŸŽ‰', { \r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if(!activeChallenge) {\r\n            return;\r\n        }\r\n\r\n        const { amount } = activeChallenge;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if (finalExperience >= experienceToNextLevel) {\r\n            finalExperience = finalExperience = experienceToNextLevel;\r\n\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);3\r\n        setChallengesCompleted(challengesCompleted + 1);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <ChallengesContext.Provider \r\n        value={{ \r\n            level, \r\n            currentExperience, \r\n            experienceToNextLevel,\r\n            challengesCompleted, \r\n            levelUp,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            completeChallenge,\r\n            \r\n         }}\r\n         >\r\n            {children}\r\n\r\n            { isLevelUpModalOpen && <LevelUpModal />}\r\n\r\n        </ChallengesContext.Provider>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}