{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projetos Jaqueline\\\\Rocketseat\\\\NLW32020\\\\movefocus-next\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useContext } from \"react\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    startCountdown,\n    resetCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["D:/Projetos Jaqueline/Rocketseat/NLW32020/movefocus-next/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAA8BA,UAA9B,QAAgD,OAAhD;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAIA,OAAO,SAASC,SAAT,GAAqB;AAE1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA,cAA3C;AAA2DC,IAAAA;AAA3D,MAA8ET,UAAU,CAACC,gBAAD,CAA9F;AAIA,QAAM,CAACS,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACe,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGV,WAAW,gBACP;AACA,MAAA,QAAQ,MADR;AAEA,MAAA,SAAS,EAAEJ,MAAM,CAACgB,eAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBAUN;AAAA,gBACMX,QAAQ,gBACN;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAG,GAAGL,MAAM,CAACgB,eAAiB,IAAIhB,MAAM,CAACiB,qBAAuB,EAFzE;AAGA,QAAA,OAAO,EAAEV,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,gBASN;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAEP,MAAM,CAACgB,eAFlB;AAGA,QAAA,OAAO,EAAEV,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVR,qBAvBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\r\nimport { CountdownContext } from \"../contexts/CountdownContext\";\r\nimport styles from \"../styles/components/Countdown.module.css\";\r\n\r\n\r\n\r\nexport function Countdown() {\r\n\r\n  const { minutes, seconds, hasFinished, isActive, startCountdown, resetCountdown } = useContext(CountdownContext);\r\n\r\n  \r\n\r\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\r\n  const [secondLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div className={styles.countdownContainer}>\r\n        <div>\r\n          <span>{minuteLeft}</span>\r\n          <span>{minuteRight}</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n          <span>{secondLeft}</span>\r\n          <span>{secondRight}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {hasFinished ? (\r\n           <button\r\n           disabled\r\n           className={styles.countdownButton}\r\n           \r\n         >\r\n           Ciclo encerrado\r\n         </button> \r\n           ) : (\r\n\r\n            <>\r\n                { isActive ? (\r\n                    <button\r\n                    type=\"button\"\r\n                    className={`${ styles.countdownButton } ${ styles.countdownButtonActive }`}\r\n                    onClick={resetCountdown}\r\n                    >\r\n                    Abandonar ciclo\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                    type=\"button\"\r\n                    className={styles.countdownButton}\r\n                    onClick={startCountdown}\r\n                    >\r\n                    Iniciar um ciclo\r\n                    </button>\r\n                )}\r\n            </>\r\n\r\n           )}\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}