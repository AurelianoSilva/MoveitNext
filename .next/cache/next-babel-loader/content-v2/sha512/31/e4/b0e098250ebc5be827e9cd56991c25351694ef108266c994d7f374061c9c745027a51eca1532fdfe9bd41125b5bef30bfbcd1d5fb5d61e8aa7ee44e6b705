{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"D:/Projetos Jaqueline/Rocketseat/NLW32020/movefocus-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"D:/Projetos Jaqueline/Rocketseat/NLW32020/movefocus-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\Projetos Jaqueline\\\\Rocketseat\\\\NLW32020\\\\movefocus-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nimport Cookies from 'js-cookie';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _ref2,\n      _ref3 = _slicedToArray(_ref2, 1),\n      isLevelUpModalOpen = _ref3[0];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ðŸŽ‰', {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience = experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    3;\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      experienceToNextLevel: experienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"rRgkk49nHdmxiilpCV+wZetkgvA=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["D:/Projetos Jaqueline/Rocketseat/NLW32020/movefocus-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","Cookies","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import {createContext, useState, ReactNode, useEffect} from 'react';\r\nimport challenges from '../../challenges.json';\r\nimport Cookies from 'js-cookie';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    experienceToNextLevel: number;\r\n    challengesCompleted: number;\r\n    activeChallenge: Challenge;\r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completeChallenge: () => void;\r\n\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n}\r\n\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children, ...rest } : ChallengesProviderProps) {\r\n\r\n    const [level, setLevel] = useState( rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null);\r\n    const [isLevelUpModalOpen]\r\n\r\n    const experienceToNextLevel = Math.pow( (level + 1) * 4, 2);\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('challengesCompleted', String(challengesCompleted));\r\n    },[level, currentExperience, challengesCompleted]);\r\n\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge);\r\n\r\n        new Audio('/notification.mp3').play();\r\n\r\n        if(Notification.permission === 'granted') {\r\n            new Notification('Novo desafio ðŸŽ‰', { \r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if(!activeChallenge) {\r\n            return;\r\n        }\r\n\r\n        const { amount } = activeChallenge;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if (finalExperience >= experienceToNextLevel) {\r\n            finalExperience = finalExperience = experienceToNextLevel;\r\n\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);3\r\n        setChallengesCompleted(challengesCompleted + 1);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <ChallengesContext.Provider \r\n        value={{ \r\n            level, \r\n            currentExperience, \r\n            experienceToNextLevel,\r\n            challengesCompleted, \r\n            levelUp,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            completeChallenge,\r\n            \r\n         }}\r\n         >\r\n            {children}\r\n\r\n            <LevelUpModal />\r\n\r\n        </ChallengesContext.Provider>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}